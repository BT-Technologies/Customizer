' Gambas class file
' Main Form

PUBLIC SUB Form_Open()
  DIM STATUS AS Variant
  ME.Center
  
  DistName.MaxLength = 16
  HostName.MaxLength = 16
  LiveCD_User.MaxLength = 16

  SHELL "pgrep customizer | wc -l" TO STATUS
  IF Val(STATUS) > 1 THEN 
    Message.Warning("Another instance of Customizer is already running!")
    ME.Close
  ENDIF 
  
  Module.CheckExistence()
END

' Main Buttons
PUBLIC SUB UseImage_Click()
  DIM ISO AS String
  SHELL "grep ISO= /opt/Customizer/settings.conf | sed 's/ISO=//;s/\"//g'" TO ISO
  
  Dialog.Title = "Please select ISO Image"
  Dialog.Filter = ["*.iso", "ISO Images"]
  
  IF Exist(Trim(ISO)) THEN 
    Dialog.Path = Trim(ISO)
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  SHELL "sed -i 's@ISO=.*@ISO=\"" & Dialog.Path & "\"@' /opt/Customizer/settings.conf" WAIT
  EXEC ["x-terminal-emulator", "--title=Disassambling ISO image", "-e", "/opt/Customizer/CLI.sh", "-u"] WAIT
  Module.CheckExistence()
END

PUBLIC SUB Edit_Sources_Click()
  EXEC ["x-terminal-emulator", "--title=Editing sources.list", "-e", "/opt/Customizer/CLI.sh", "-e"] WAIT
END

PUBLIC SUB Desktop_Click()
  EXEC ["x-terminal-emulator", "--title=Building ISO Image", "-e", "/opt/Customizer/CLI.sh", "-x"] WAIT
END

PUBLIC SUB Terminal_Click()
  EXEC ["x-terminal-emulator", "--title=Chroot Terminal", "-e", "/opt/Customizer/CLI.sh", "-c"] WAIT
  Module.Check_for_Xsession()
END

PUBLIC SUB Build_ISO_Click()
  IF DistName.Text = "" OR IF HostName.Text = "" OR IF LiveCD_User.Text = "" OR IF Version.Text = "" OR IF ReleaseNotesURL.Text = "" THEN 
    Message.Warning("One or more of the configuration fields are blank! Just type in something.")
  ELSE
    EXEC ["x-terminal-emulator", "--title=Building ISO Image", "-e", "/opt/Customizer/CLI.sh", "-r"] WAIT
  ENDIF 
  
  Module.Check_for_ISO()
END

PUBLIC SUB Clean_Click()
  EXEC ["x-terminal-emulator", "--title=Cleaning up", "-e", "/opt/Customizer/CLI.sh", "-t"] WAIT
  Module.Disable_Stuff
  Build_ISO.Text = "Build ISO"
END

PUBLIC SUB Install_DEB_Click()
  DIM DEB AS String
  SHELL "grep DEB= /opt/Customizer/settings.conf | sed 's/DEB=//;s/\"//g'" TO DEB
  
  Dialog.Title = "Please select a DEB package"
  Dialog.Filter = ["*.deb", "Debian Packages"]
  
  IF Exist(Trim(DEB)) THEN 
    Dialog.Path = Trim(DEB)
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  SHELL "sed -i 's@DEB=.*@DEB=\"" & Dialog.Path & "\"@' /opt/Customizer/settings.conf" WAIT

  EXEC ["x-terminal-emulator", "--title=Installing DEB Package", "-e", "/opt/Customizer/CLI.sh", "-d"] WAIT
  Module.Check_for_Xsession()
END

PUBLIC SUB Archive_Click()
  EXEC ["x-terminal-emulator", "--title=Running Package Manager", "-e", "/opt/Customizer/CLI.sh", "-a"] WAIT
  Module.Check_for_Xsession()
END


PUBLIC SUB QEMU_Click()
  EXEC ["x-terminal-emulator", "--title=Emulating ISO Image with QEMU", "-e", "/opt/Customizer/CLI.sh", "-q"] WAIT
END






' Change Configs
PUBLIC SUB DistName_Change()
  DIM WorkDir AS String
  SHELL "grep WORK_DIR= /opt/Customizer/settings.conf | sed 's/WORK_DIR=//;s/\"//g'" TO WorkDir
  
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  SHELL "sed -i 's/DISTRIB_ID=.*/DISTRIB_ID=" & DistName.Text & "/' '" & Trim(WorkDir) & "/FileSystem/etc/lsb-release'"
  SHELL "sed -i 's/DISTRIB_DESCRIPTION=.*/DISTRIB_DESCRIPTION=\"" & DistName.Text & " " & Version.Text & "\"/' '" & Trim(WorkDir) & "/FileSystem/etc/lsb-release'"
  TRY File.Save(Trim(WorkDir) & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  TRY File.Save(Trim(WorkDir) & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB HostName_Change()
  DIM WorkDir AS String
  SHELL "grep WORK_DIR= /opt/Customizer/settings.conf | sed 's/WORK_DIR=//;s/\"//g'" TO WorkDir
  
  HostName.Text = Trim(LCase(HostName.Text))
  SHELL "sed -i 's/export HOST=.*/export HOST=\"" & HostName.Text & "\"/' '" & Trim(WorkDir) & "/FileSystem/etc/casper.conf'"
END

PUBLIC SUB LiveCD_User_Change()
  DIM WorkDir AS String
  SHELL "grep WORK_DIR= /opt/Customizer/settings.conf | sed 's/WORK_DIR=//;s/\"//g'" TO WorkDir
  
  LiveCD_User.Text = Trim(LCase(LiveCD_User.Text))
  SHELL "sed -i 's/export USERNAME=.*/export USERNAME=\"" & LiveCD_User.Text & "\"/' '" & Trim(WorkDir) & "/FileSystem/etc/casper.conf'"
END

PUBLIC SUB Version_Change()
  DIM WorkDir AS String
  SHELL "grep WORK_DIR= /opt/Customizer/settings.conf | sed 's/WORK_DIR=//;s/\"//g'" TO WorkDir
  
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  SHELL "sed -i 's/DISTRIB_RELEASE=.*/DISTRIB_RELEASE=" & Version.Text & "/' '" & Trim(WorkDir) & "/FileSystem/etc/lsb-release'"
  SHELL "sed -i 's/DISTRIB_DESCRIPTION=.*/DISTRIB_DESCRIPTION=\"" & DistName.Text & " " & Version.Text & "\"/' '" & Trim(WorkDir) & "/FileSystem/etc/lsb-release" '
  TRY File.Save(Trim(WorkDir) & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  TRY File.Save(Trim(WorkDir) & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB ReleaseNotesURL_Change()
  DIM WorkDir AS String
  SHELL "grep WORK_DIR= /opt/Customizer/settings.conf | sed 's/WORK_DIR=//;s/\"//g'" TO WorkDir
  
  Trim(ReleaseNotesURL.Text)
  TRY File.Save(Trim(WorkDir) & "/ISO/.disk/release_notes_url", ReleaseNotesURL.Text)
END

PUBLIC SUB Form_Close()
  EXEC ["killall", "customizer"]
END



  'Menu - Main
PUBLIC SUB Quit_Click()
  FMain.Close()
END

  
PUBLIC SUB Settings_Click()
  FSettings.Show
END

PUBLIC SUB Import_Snapshot_Click()
  DIM SNAPSHOT AS String
  SHELL "grep SNAPSHOT= /opt/Customizer/settings.conf | sed 's/SNAPSHOT=//;s/\"//g'" TO SNAPSHOT
  
  Dialog.Title = "Please select Customizer project snapshot"
  Dialog.Filter = ["*.cps", "Snapshots"]
  
  IF Exist(Trim(SNAPSHOT)) THEN 
    Dialog.Path = Trim(SNAPSHOT)
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN
  SHELL "sed -i 's@SNAPSHOT=.*@SNAPSHOT=\"" & Dialog.Path & "\"@' /opt/Customizer/settings.conf" WAIT

  EXEC ["x-terminal-emulator", "--title=Importing Snapshot", "-e", "/opt/Customizer/CLI.sh", "-i"] WAIT
  Module.CheckExistence()
END

PUBLIC SUB Create_Snapshot_Click()
  EXEC ["x-terminal-emulator", "--title=Creatings Snapshot", "-e", "/opt/Customizer/CLI.sh", "-s"] WAIT
END

  'Menu - Extras
PUBLIC SUB Exec_Hook_Click()
  DIM HOOK AS String
  SHELL "grep HOOK= /opt/Customizer/settings.conf | sed 's/HOOK=//;s/\"//'" TO HOOK 
  
  Dialog.Title = "Please select hook file"
  
  IF Exist(Trim(HOOK)) THEN 
    Dialog.Path = Trim(HOOK)
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  SHELL "sed -i 's@HOOK=.*@HOOK=\"" & Dialog.Path & "\"@' /opt/Customizer/settings.conf" WAIT
  EXEC ["x-terminal-emulator", "--title=Executing Chroot Hook", "-e", "/opt/Customizer/CLI.sh", "-k"] WAIT
END

PUBLIC SUB Install_GUI_Click()
  EXEC ["x-terminal-emulator", "--title=Installing GUI", "-e", "/opt/Customizer/CLI.sh", "-g"] WAIT
END
  
PUBLIC SUB Tweaks_Click()
  FTweaks.Show
END

  
PUBLIC SUB Browse_FS_Click()
  Module.Browse_FileSystem_Folder()
END

PUBLIC SUB Browse_ISO_Click()
  Module.Browse_ISO_Folder()
END

PUBLIC SUB List_Packages_Click()
  FPackages.Show
END

PUBLIC SUB SysLinux_Click()
  FSysLinux.Show
END





  'Menu - About
PUBLIC SUB About_Click()
  FAbout.Show
END 

PUBLIC SUB License_Click()
  FLicense.Show
END
