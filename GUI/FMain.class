' Gambas class file
' Main Form

PUBLIC WorkDir AS String = Func.Get_Str("/opt/Customizer/settings.conf", "WORK_DIR=", "/home") 

PUBLIC SUB Form_Open()
  DIM STATUS AS Variant
  ME.Center
  
  DistName.MaxLength = 16
  HostName.MaxLength = 16
  LiveCD_User.MaxLength = 16

  Check.Conf_File()
  Check.Existence()
END

' Main Buttons
PUBLIC SUB UseImage_Click()
  DIM ISO AS String
  
  ISO = Func.Get_Str("/opt/Customizer/settings.conf", "ISO=", "")

  Dialog.Title = "Please select ISO Image"
  Dialog.Filter = ["*.iso", "ISO Images"]
  
  IF Exist(ISO) THEN 
    Dialog.Path = ISO
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Func.Replace_Str("/opt/Customizer/settings.conf", "ISO=", Dialog.Path)
  
  Func.Debug_Msg("Extracting ISO")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-u"] WAIT
  
  Check.Existence()
END

PUBLIC SUB Edit_Sources_Click()
  Func.Edit_File("/FileSystem/etc/apt/sources.list")
END

PUBLIC SUB Desktop_Click()
  Func.Debug_Msg("Launching nested X-session")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-x"] WAIT
  
  Check.Pkg_Manager()
END

PUBLIC SUB Terminal_Click()
  Func.Debug_Msg("Launching chroot Terminal")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-c"] WAIT
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Build_ISO_Click()
  IF DistName.Text = "" OR IF HostName.Text = "" OR IF LiveCD_User.Text = "" OR IF Version.Text = "" OR IF ReleaseNotesURL.Text = "" THEN 
    Message.Warning("One or more of the configuration fields are blank! Just type in something.")
  ELSE
    Func.Debug_Msg("Rebuilding ISO image")
    EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-r"] WAIT
  ENDIF 
  
  Check.ISO()
END

PUBLIC SUB Clean_Click()
  Func.Debug_Msg("Cleaning working directories")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-t"] WAIT
    
  Func.Disable_Stuff
  Build_ISO.Text = "Build ISO"
END

PUBLIC SUB Install_DEB_Click()
  DIM DEB AS String
  
  DEB = Func.Get_Str("/opt/Customizer/settings.conf", "DEB=", "")
  
  Dialog.Title = "Please select a DEB package"
  Dialog.Filter = ["*.deb", "Debian Packages"]
  
  IF Exist(DEB) THEN 
    Dialog.Path = DEB
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Func.Replace_Str("/opt/Customizer/settings.conf", "DEB=", Dialog.Path)

  Func.Debug_Msg("Installing DEB package")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-d"] WAIT
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Archive_Click()
  Func.Debug_Msg("Launching Package Manager")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-p"] WAIT
  
  Check.X_session()
END


PUBLIC SUB QEMU_Click()
  Func.Debug_Msg("Launching QEMU")
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-q"] WAIT
END






' Change Configs
PUBLIC SUB DistName_Change()
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  Func.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_ID=", DistName.Text)
  Func.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_DESCRIPTION=", DistName.Text & " " & Version.Text)
  Func.Save_File(WorkDir & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  Func.Save_File(WorkDir & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB HostName_Change()
  HostName.Text = Trim(LCase(HostName.Text))
  Func.Replace_Str(WorkDir & "/FileSystem/etc/casper.conf", "export HOST=", HostName.Text)
END

PUBLIC SUB LiveCD_User_Change()
  LiveCD_User.Text = Trim(LCase(LiveCD_User.Text))
  Func.Replace_Str(WorkDir & "/FileSystem/etc/casper.conf", "export USERNAME=", LiveCD_User.Text)
END

PUBLIC SUB Version_Change()
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  Func.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_RELEASE=", Version.Text)
  Func.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_DESCRIPTION=", DistName.Text & " " & Version.Text)
  Func.Save_File(WorkDir & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  Func.Save_File(WorkDir & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB ReleaseNotesURL_Change()
  Trim(ReleaseNotesURL.Text)
  Func.Save_File(WorkDir & "/ISO/.disk/release_notes_url", ReleaseNotesURL.Text)
END

PUBLIC SUB Form_Close()
  EXEC ["killall", "customizer"]
END



  'Menu - Main
PUBLIC SUB Quit_Click()
  ME.Close(0)
END

  
PUBLIC SUB Settings_Click()
  FSettings.Show
END

PUBLIC SUB Import_Snapshot_Click()
  DIM SNAPSHOT AS String
  
  SNAPSHOT = Func.Get_Str("/opt/Customizer/settings.conf", "SNAPSHOT=", "")
  
  Dialog.Title = "Please select Customizer project snapshot"
  Dialog.Filter = ["*.cps", "Snapshots"]
  
  IF Exist(SNAPSHOT) THEN 
    Dialog.Path = SNAPSHOT
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN
  Func.Replace_Str("/opt/Customizer/settings.conf", "SNAPSHOT=", Dialog.Path)

  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-i"] WAIT
  
  Check.Existence()
END

PUBLIC SUB Create_Snapshot_Click()
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-s"] WAIT
END

  'Menu - Extras
PUBLIC SUB Exec_Hook_Click()
  DIM HOOK AS String
  
  HOOK = Func.Get_Str("/opt/Customizer/settings.conf", "HOOK=", "")
  
  Dialog.Title = "Please select hook file"
  
  IF Exist(HOOK) THEN 
    Dialog.Path = HOOK
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Func.Replace_Str("/opt/Customizer/settings.conf", "HOOK=", Dialog.Path)
  
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-k"] WAIT
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Install_GUI_Click()
  EXEC [Func.Use_Term(), "-e", "/opt/Customizer/CLI.sh", "-g"] WAIT
  
  Check.X_session()
  Check.Pkg_Manager()
END
  
PUBLIC SUB Tweaks_Click()
  FTweaks.Show
END

PUBLIC SUB List_Packages_Click()
  FPackages.Show
END

PUBLIC SUB SysLinux_Click()
  FSysLinux.Show
END


PUBLIC SUB Grub2_Click()
  FGrub2.Show
END


  
' Browse directories
PUBLIC SUB Browse_FS_Click()
  Func.Browse_Dir("/FileSystem")
END

PUBLIC SUB Browse_ISO_Click()
  Func.Browse_Dir("/ISO")
END

PUBLIC SUB Browse_FS_etc_skel_Click()
  Func.Browse_Dir("/FileSystem/etc/skel")
END

PUBLIC SUB Browse_FS_etc_Click()
  Func.Browse_Dir("/FileSystem/etc")
END

PUBLIC SUB Browse_FS_root_Click()
  Func.Browse_Dir("/FileSystem/root")
END

PUBLIC SUB Browse_ISO_isolinux_Click()
  Func.Browse_Dir("/ISO/isolinux")
END

PUBLIC SUB Browse_FS_usr_share_Click()
  Func.Browse_Dir("/FileSystem/usr/share")
END

PUBLIC SUB Browse_FS_usr_Click()
  Func.Browse_Dir("/FileSystem/usr")
END

PUBLIC SUB Browse_FS_etc_default_Click()
  Func.Browse_Dir("/FileSystem/etc/default")
END

PUBLIC SUB Browse_FS_boot_Click()
  Func.Browse_Dir("/FileSystem/boot")
END




' Edit files
PUBLIC SUB Edit_casper_conf_Click()
  Func.Edit_File("/FileSystem/etc/casper.conf")
END

PUBLIC SUB Edit_lsb_release_Click()
  Func.Edit_File("/FileSystem/etc/lsb-release")
END

PUBLIC SUB Edit_motd_Click()
  Func.Edit_File("/FileSystem/etc/update-motd.d/10-help-text")
END

PUBLIC SUB Edit_etc_default_grub_Click()
  Func.Edit_File("/FileSystem/etc/default/grub")
END

PUBLIC SUB Edit_etc_grub_d_05_debian_theme_Click()
  Func.Edit_File("/FileSystem/etc/grub.d/05_debian_theme")
END

PUBLIC SUB Edit_grub_background_sh_Click()
  Func.Edit_File("/FileSystem/usr/share/desktop-base/grub_background.sh")
END



  'Menu - About
PUBLIC SUB About_Click()
  FAbout.Show
END 

PUBLIC SUB License_Click()
  FLicense.Show
END

PUBLIC SUB Credits_Click()
  FCredits.Show
END
