' Gambas class file
' Main Form

'PUBLIC WorkDir = Functions.Get_Conf("WORK_DIR=") AS String

PUBLIC SUB Form_Open()
  DIM STATUS AS Variant
  ME.Center
  
  DistName.MaxLength = 16
  HostName.MaxLength = 16
  LiveCD_User.MaxLength = 16

  SHELL "pgrep customizer | wc -l" TO STATUS
  IF Val(STATUS) > 1 THEN 
    Message.Warning("Another instance of Customizer is already running!")
    ME.Close
  ENDIF 

  Check.Conf_File()
  Check.Existence()
END

' Main Buttons
PUBLIC SUB UseImage_Click()
  DIM ISO, ATitle AS String
  
  ISO = Functions.Get_Conf("ISO=")
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  Dialog.Title = "Please select ISO Image"
  Dialog.Filter = ["*.iso", "ISO Images"]
  
  IF Exist(ISO) THEN 
    Dialog.Path = ISO
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Functions.Replace_Conf("ISO=", Dialog.Path)
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Disassambling ISO image", "-e", "/opt/Customizer/CLI.sh", "-u"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-u"] WAIT
  ENDIF 
  
  Check.Existence()
END

PUBLIC SUB Edit_Sources_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Editing sources.list", "-e", "/opt/Customizer/CLI.sh", "-e"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-e"] WAIT
  ENDIF 
END

PUBLIC SUB Desktop_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Running Desktop session", "-e", "/opt/Customizer/CLI.sh", "-x"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-x"] WAIT
  ENDIF 
  
  Check.Pkg_Manager()
END

PUBLIC SUB Terminal_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Chroot Terminal", "-e", "/opt/Customizer/CLI.sh", "-c"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-c"] WAIT
  ENDIF 
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Build_ISO_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF DistName.Text = "" OR IF HostName.Text = "" OR IF LiveCD_User.Text = "" OR IF Version.Text = "" OR IF ReleaseNotesURL.Text = "" THEN 
    Message.Warning("One or more of the configuration fields are blank! Just type in something.")
  ELSE
    IF ATitle = 1 THEN 
      EXEC ["x-terminal-emulator", "--title=Building ISO Image", "-e", "/opt/Customizer/CLI.sh", "-r"] WAIT
    ELSE 
      EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-r"] WAIT
    ENDIF 
  ENDIF 
  
  Check.ISO()
END

PUBLIC SUB Clean_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")

  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Cleaning up", "-e", "/opt/Customizer/CLI.sh", "-t"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-t"] WAIT
  ENDIF 
  Module.Disable_Stuff
  Build_ISO.Text = "Build ISO"
END

PUBLIC SUB Install_DEB_Click()
  DIM DEB, ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  DEB = Functions.Get_Conf("DEB=")
  
  Dialog.Title = "Please select a DEB package"
  Dialog.Filter = ["*.deb", "Debian Packages"]
  
  IF Exist(DEB) THEN 
    Dialog.Path = DEB
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Functions.Replace_Conf("DEB=", Dialog.Path)

  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Installing DEB Package", "-e", "/opt/Customizer/CLI.sh", "-d"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-d"] WAIT
  ENDIF 
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Archive_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Running Package Manager", "-e", "/opt/Customizer/CLI.sh", "-p"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-p"] WAIT
  ENDIF 
  
  Check.X_session()
END


PUBLIC SUB QEMU_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Emulating ISO Image with QEMU", "-e", "/opt/Customizer/CLI.sh", "-q"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-q"] WAIT
  ENDIF 
END






' Change Configs
PUBLIC SUB DistName_Change()
  DIM WorkDir AS String
  
  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_ID=", Quote(DistName.Text))
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_DESCRIPTION=", Quote(DistName.Text & " " & Version.Text))
  TRY File.Save(WorkDir & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  TRY File.Save(WorkDir & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB HostName_Change()
  DIM WorkDir AS String
  
  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  HostName.Text = Trim(LCase(HostName.Text))
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/casper.conf", "export HOST=", Quote(HostName.Text))
END

PUBLIC SUB LiveCD_User_Change()
  DIM WorkDir AS String
  
  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  LiveCD_User.Text = Trim(LCase(LiveCD_User.Text))
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/casper.conf", "export USERNAME=", Quote(LiveCD_User.Text))
END

PUBLIC SUB Version_Change()
  DIM WorkDir AS String
  
  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  DistName.Text = Trim(DistName.Text)
  Version.Text = Trim(Version.Text)
  
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_RELEASE=", Quote(Version.Text))
  Functions.Replace_Str(WorkDir & "/FileSystem/etc/lsb-release", "DISTRIB_DESCRIPTION=", Quote(DistName.Text & " " & Version.Text))
  TRY File.Save(WorkDir & "/FileSystem/etc/issue", DistName.Text & " " & Version.Text & " \\n \\l")
  TRY File.Save(WorkDir & "/FileSystem/etc/issue.net", DistName.Text & " " & Version.Text)
END

PUBLIC SUB ReleaseNotesURL_Change()
  DIM WorkDir AS String
  
  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  Trim(ReleaseNotesURL.Text)
  TRY File.Save(WorkDir & "/ISO/.disk/release_notes_url", ReleaseNotesURL.Text)
END

PUBLIC SUB Form_Close()
  EXEC ["killall", "customizer"]
END



  'Menu - Main
PUBLIC SUB Quit_Click()
  FMain.Close()
END

  
PUBLIC SUB Settings_Click()
  FSettings.Show
END

PUBLIC SUB Import_Snapshot_Click()
  DIM SNAPSHOT, ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  SNAPSHOT = Functions.Get_Conf("SNAPSHOT=")
  
  Dialog.Title = "Please select Customizer project snapshot"
  Dialog.Filter = ["*.cps", "Snapshots"]
  
  IF Exist(SNAPSHOT) THEN 
    Dialog.Path = SNAPSHOT
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN
  Functions.Replace_Conf("SNAPSHOT=", Dialog.Path)

  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Importing Snapshot", "-e", "/opt/Customizer/CLI.sh", "-i"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-i"] WAIT
  ENDIF 
  
  Check.Existence()
END

PUBLIC SUB Create_Snapshot_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Creatings Snapshot", "-e", "/opt/Customizer/CLI.sh", "-s"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-s"] WAIT
  ENDIF 
END

  'Menu - Extras
PUBLIC SUB Exec_Hook_Click()
  DIM HOOK, ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  HOOK = Functions.Get_Conf("HOOK=")
  
  Dialog.Title = "Please select hook file"
  
  IF Exist(HOOK) THEN 
    Dialog.Path = HOOK
  ELSE 
    Dialog.Path = "/home"
  ENDIF 
  
  IF Dialog.OpenFile() THEN RETURN 
  Functions.Replace_Conf("HOOK=", Dialog.Path)
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Executing Chroot Hook", "-e", "/opt/Customizer/CLI.sh", "-k"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-k"] WAIT
  ENDIF 
  
  Check.X_session()
  Check.Pkg_Manager()
END

PUBLIC SUB Install_GUI_Click()
  DIM ATitle AS String
  
  ATitle = Functions.Get_Conf("APPEND_TITLE=")
  
  IF ATitle = 1 THEN 
    EXEC ["x-terminal-emulator", "--title=Installing GUI", "-e", "/opt/Customizer/CLI.sh", "-g"] WAIT
  ELSE 
    EXEC ["x-terminal-emulator", "-e", "/opt/Customizer/CLI.sh", "-g"] WAIT
  ENDIF 
  
  Check.X_session()
  Check.Pkg_Manager()
END
  
PUBLIC SUB Tweaks_Click()
  FTweaks.Show
END

  
PUBLIC SUB Browse_FS_Click()
  DIM WorkDir AS String

  WorkDir = Functions.Get_Conf("WORK_DIR=")
  
  IF Exist("/usr/bin/nautilus") THEN 
    EXEC ["/usr/bin/nautilus", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/dolphin") THEN 
    EXEC ["/usr/bin/dolphin", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/pcmanfm") THEN 
    EXEC ["/usr/bin/pcmanfm", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/xfe") THEN 
    EXEC ["/usr/bin/xfe", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/worker") THEN 
    EXEC ["/usr/bin/worker", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/gentoo") THEN 
    EXEC ["/usr/bin/gentoo", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/thunar") THEN 
    EXEC ["/usr/bin/thunar", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/filerunner") THEN 
    EXEC ["/usr/bin/filerunner", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/krusader") THEN 
    EXEC ["/usr/bin/krusader", WorkDir & "/FileSystem"]
  ELSE IF Exist("/usr/bin/rox-filer") THEN 
    EXEC ["/usr/bin/rox-filer", WorkDir & "/FileSystem"]
  ELSE 
    Message.Warning("No supported File-Manager was detected! \nSupported File-Managers are: \n\n<b>Nautilus (Gnome) \nDolphin (KDE) \n PCManFM (LXDE) \nThunar (XFCE4) \nXFE \nWorker \nGentoo \nFileRunner \nKrusader \nROX-Filer</b> \n\n Next time you try to browse folders \nmake sure you've installed one of these.")
  ENDIF
END

PUBLIC SUB Browse_ISO_Click()
  DIM WorkDir AS String

  WorkDir = Functions.Get_Conf("WORK_DIR=")

  IF Exist("/usr/bin/nautilus") THEN 
    EXEC ["/usr/bin/nautilus", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/dolphin") THEN 
    EXEC ["/usr/bin/dolphin", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/pcmanfm") THEN 
    EXEC ["/usr/bin/pcmanfm", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/xfe") THEN 
    EXEC ["/usr/bin/xfe", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/worker") THEN 
    EXEC ["/usr/bin/worker", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/gentoo") THEN 
    EXEC ["/usr/bin/gentoo", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/thunar") THEN 
    EXEC ["/usr/bin/thunar", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/filerunner") THEN 
    EXEC ["/usr/bin/filerunner", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/krusader") THEN 
    EXEC ["/usr/bin/krusader", WorkDir & "/ISO"]
  ELSE IF Exist("/usr/bin/rox-filer") THEN 
    EXEC ["/usr/bin/rox-filer", WorkDir & "/ISO"]
  ELSE 
    Message.Warning("No supported File-Manager was detected! \nSupported File-Managers are: \n\n<b>Nautilus (Gnome) \nDolphin (KDE) \n PCManFM (LXDE) \nThunar (XFCE4) \nXFE \nWorker \nGentoo \nFileRunner \nKrusader \nROX-Filer</b> \n\n Next time you try to browse folders \nmake sure you've installed one of these.")
  ENDIF
END

PUBLIC SUB List_Packages_Click()
  FPackages.Show
END

PUBLIC SUB SysLinux_Click()
  FSysLinux.Show
END





  'Menu - About
PUBLIC SUB About_Click()
  FAbout.Show
END 

PUBLIC SUB License_Click()
  FLicense.Show
END

PUBLIC SUB Credits_Click()
  FCredits.Show
END
