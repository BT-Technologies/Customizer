#!/usr/bin/env bash
# BashLibs - libraries for Bash
# Copyright (C) 2012  Ivailo Monev
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Homepage: https://github.com/fluxer/BashStuff
#

# Log - log messages to stdout, file or both
#
# Depending on $LOG_TYPE and $LOG_FILE
# 
# $1 - message to log
# $2 - whether to stop or not (pause)
# $3 - whether to exit ir not
# $4 - exit status (optional)

# Setup color variables
if [ -t 1 ]; then
	if [ $(tput colors) -ge 8 ]; then
		bold="$(tput bold)"
		normal="$(tput sgr0)"
		black="$(tput setaf 0)"
		red="$(tput setaf 1)"
		green="$(tput setaf 2)"
		yellow="$(tput setaf 3)"
		blue="$(tput setaf 4)"
		magenta="$(tput setaf 5)"
		cyan="$(tput setaf 6)"
		white="$(tput setaf 7)"
	fi
fi

LOG_INFO() {
	case "$LOG_TYPE" in
		console) echo -e "[${yellow}*${normal}] ${green}$1${normal}" ;;
		file) echo -e "[*] $1" >> "$LOG_FILE" ;;
		both) echo -e "[${yellow}*${normal}] ${green}$1${normal}"
			  echo -e "[*] $1" >> "$LOG_FILE" ;;
	esac
	
	if [ "$2" = "stop" ];then
		read nothing
	fi
	
	if [ "$3" = "exit" ];then
		if [ "$4" ];then
			exit "$4"
		else
			exit 1
		fi
	fi
}

LOG_QUESTION() {
	case "$LOG_TYPE" in
		console) echo -e "[${yellow}?${normal}] ${green}$1${normal} ?" ;;
		file) echo -e "[?] $1 ?" >> "$LOG_FILE" ;;
		both) echo -e "[${yellow}?${normal}] ${green}$1${normal} ?"
			  echo -e "[?] $1 ?" >> "$LOG_FILE" ;;
	esac
	
	if [ "$2" = "stop" ];then
		read nothing
	fi
	
	if [ "$3" = "exit" ];then
		if [ "$4" ];then
			exit "$4"
		else
			exit 1
		fi
	fi
}

LOG_WARNING() {
	case "$LOG_TYPE" in
		console) echo -e "[${red}!${normal}] ${yellow}$1${normal}" ;;
		file) echo -e "[!] $1" >> "$LOG_FILE" ;;
		both) echo -e "[${red}!${normal}] ${yellow}$1${normal}"
			  echo -e "[!] $1" >> "$LOG_FILE" ;;
	esac
	
	if [ "$2" = "stop" ];then
		read nothing
	fi
	
	if [ "$3" = "exit" ];then
		if [ "$4" ];then
			exit "$4"
		else
			exit 1
		fi
	fi
}

LOG_ERROR() {
	case "$LOG_TYPE" in
		console) echo -e "[${red}X${normal}] ${red}$1${normal}" ;;
		file) echo -e "[X] $1" >> "$LOG_FILE" ;;
		both) echo -e "[${red}!${normal}] ${red}$1${normal}"
			  echo -e "[X] $1" >> "$LOG_FILE" ;;
	esac
	
	if [ "$2" = "stop" ];then
		read nothing
	fi
	
	if [ "$3" = "exit" ];then
		if [ "$4" ];then
			exit "$4"
		else
			exit 1
		fi
	fi
}

LOG_DEBUG() {
	case "$LOG_TYPE" in
		console) echo -e "[${magenta}D${normal}] ${cyan}$1${normal}" ;;
		file) echo -e "[D] $1" >> "$LOG_FILE" ;;
		both) echo -e "[${magenta}D${normal}] ${cyan}$1${normal}"
			  echo -e "[D] $1" >> "$LOG_FILE" ;;
	esac
	
	if [ "$2" = "stop" ];then
		read nothing
	fi
	
	if [ "$3" = "exit" ];then
		if [ "$4" ];then
			exit "$4"
		else
			exit 1
		fi
	fi
}
