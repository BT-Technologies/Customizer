#!/usr/bin/env bash
# Customizer - Advanced LiveCD Remastering Tool
# Copyright (C) 2011  Ivailo Monev
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Homepage: https://github.com/fluxer/Customizer
# Wiki: https://github.com/fluxer/Customizer/wiki
# Issues: https://github.com/fluxer/Customizer/issues
#
set -u
source /opt/Customizer/common
source /opt/Customizer/settings.conf

#################### Some functions used when error accures #####################

__create_work_dirs__() {
	INFO_MESSAGE "Creating work directories"
	mkdir -p "$MOUNT_PATH" "$WORK_DIR/ISO" "$WORK_DIR/FileSystem" || ERROR_MESSAGE "Unable to create working directories"
}

__clean__() {
	umount -fl "$MOUNT_PATH" 2> /dev/null
    __purge_work_dirs__
}

####################### Checking if the ISO image exists ########################

if [ ! -e "$ISO" ];then
	ERROR_MESSAGE "The ISO image doesn't exists."
fi

################## Cleaning up previous temp folders if exists ##################

if [ -d "$WORK_DIR/FileSystem" ] || [ -d "$WORK_DIR/ISO" ];then
    __clean__
    __create_work_dirs__
else
	__create_work_dirs__
fi

############################# Mounting the ISO image #############################
INFO_MESSAGE "Mounting ISO"
mount -t iso9660 -o loop "$ISO" "$MOUNT_PATH" || ERROR_MESSAGE "Unable to mount the ISO"

######################## Check if the ISO image is usable ########################

INFO_MESSAGE "Checking ISO image"
if [ ! -d "$MOUNT_PATH/casper" ] || [ ! -d "$MOUNT_PATH/.disk" ] || \
 [ ! -d "$MOUNT_PATH/isolinux" ] || [ ! -e "$MOUNT_PATH/casper/filesystem.squashfs" ]; then
	ERROR_MESSAGE_NO_EXIT "This is not a usable ISO image"
	__clean__
    exit 2
fi

######################### Extraction filesystem.squashfs ##########################

INFO_MESSAGE "Extracting FileSystem"
unsquashfs -f -d "$WORK_DIR/FileSystem" "$MOUNT_PATH/casper/filesystem.squashfs" || ERROR_MESSAGE "Unable to extract the filesystem.squashfs"

################## Check the architecture of the root filesystem ##################

INFO_MESSAGE "Checking architecture"
ARCH=`chroot "$WORK_DIR/FileSystem" dpkg --print-architecture` || ERROR_MESSAGE "Unable to chroot and get the architecture"
if [ "$ARCH" = "amd64" -o "" ] && [ "`uname -m`" != "x86_64" ]; then
	ERROR_MESSAGE_NO_EXIT "The ISOs architecture is amd64 and yours is not"
	__clean__
    exit 2
fi


############ rsync the some files but exclude some that are not needed ############

INFO_MESSAGE "Copying ISO files"
rsync --exclude=/casper/* --exclude=/md5sum.txt --exclude=/README.diskdefines -a "$MOUNT_PATH/" "$WORK_DIR/ISO" || ERROR_MESSAGE "Unable to rsync files"

############################## Unmount the ISO image ##############################
INFO_MESSAGE "Unmounting ISO"
umount -f "$MOUNT_PATH" || EXTRA_ERROR_MESSAGE "Unable to unmount the ISO from" "$MOUNT_PATH"
